name: CI-CD

on:
  push:
    branches:
    - stable
    - devel
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
    - '[0-9]+.[0-9]+.[0-9]+a[0-9]+'
  pull_request:
    branches:
    - stable
    - devel

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    timeout-minutes: 120

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install tox tox-gh-actions
    - name: Test with tox
      run:
        tox -- --cov-report=xml --benchmark-skip
    - name: Report coverage
      shell: bash
      run: bash <(curl -s https://codecov.io/bash)

  release:
    needs: test
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Get tag
      id: tag
      run: echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install build twine
    - name: Build package
      run: python -m build
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run:
        twine upload --skip-existing --non-interactive dist/*
    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: "release-notes/${{ steps.tag.outputs.version }}.md"
        draft: false
        prerelease: false
    - name: Publish to website
      run: ./scripts/deploy_website.sh
      shell: bash
      env:
        TAG: ${{ steps.tag.outputs.version }}
        WORKSPACE: ${{ github.workspace }}
        WEBSITE_DEPLOY_TOKEN: ${{ secrets.WEBSITE_DEPLOY_TOKEN }}
