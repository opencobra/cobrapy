<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Packages on cobrapy - constraint-based metabolic modeling in Python</title>
    <link>https://opencobra.github.io/cobrapy/packages/</link>
    <description>Recent content in Packages on cobrapy - constraint-based metabolic modeling in Python</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Apr 2017 11:00:05 -0600</lastBuildDate>
    
	<atom:link href="https://opencobra.github.io/cobrapy/packages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mminte</title>
      <link>https://opencobra.github.io/cobrapy/packages/mminte/</link>
      <pubDate>Mon, 24 Apr 2017 11:00:05 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/mminte/</guid>
      <description>MMinte (pronounced /‘minti/) is a set of widgets that allows you to explore the pairwise interactions (positive or negative) that occur in a microbial community. From an association network and 16S rDNA sequence data, MMinte identifies corresponding genomes, reconstructs metabolic models, estimates growth under specific metabolic conditions, analyzes pairwise interactions, assigns interaction types to network links, and generates the corresponding network of interactions. You can run the MMinte widgets as an integrated pipeline or run each widget independently.</description>
    </item>
    
    <item>
      <title>escher</title>
      <link>https://opencobra.github.io/cobrapy/packages/escher/</link>
      <pubDate>Mon, 27 Mar 2017 12:13:48 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/escher/</guid>
      <description>Escher is a web-based tool for building, viewing, and sharing visualizations of biological pathways. These &amp;lsquo;pathway maps&amp;rsquo; are a great way to contextualize data about metabolism.</description>
    </item>
    
    <item>
      <title>micom</title>
      <link>https://opencobra.github.io/cobrapy/packages/micom/</link>
      <pubDate>Mon, 27 Mar 2017 11:52:51 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/micom/</guid>
      <description>micom is a Python package for metabolic modeling of microbial communities.
micom allows you to construct a community model from a list on input COBRA models and manages exchange fluxes between individuals and individuals with the environment. It explicitly accounts for different abundances of individuals in the community and can thus incorporate data from 16S rRNA sequencing experiments.</description>
    </item>
    
    <item>
      <title>corda</title>
      <link>https://opencobra.github.io/cobrapy/packages/corda/</link>
      <pubDate>Mon, 27 Mar 2017 11:52:47 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/corda/</guid>
      <description>CORDA, short for Cost Optimization Reaction Dependency Assessment is a method for the reconstruction of metabolic networks from a given reference model (a database of all known reactions) and a confidence mapping for reactions developed by A. Schultz and A. Qutub. It allows you to quickly reconstruct metabolic models for tissues, patients or specific experimental conditions from a set of transcription or proteome measurements.</description>
    </item>
    
    <item>
      <title>minspan</title>
      <link>https://opencobra.github.io/cobrapy/packages/minspan/</link>
      <pubDate>Mon, 27 Mar 2017 11:52:42 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/minspan/</guid>
      <description>This project calculates the minimal spanning vectors of the null space.</description>
    </item>
    
    <item>
      <title>dd-decaf</title>
      <link>https://opencobra.github.io/cobrapy/packages/dd-decaf/</link>
      <pubDate>Mon, 27 Mar 2017 11:52:33 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/dd-decaf/</guid>
      <description>DD-DeCaF is a Horizon 2020 project (grant agreement No 686070) bringing together leading academic partners from five European universities with five innovative European companies to address the challenge of building a comprehensive design tool. DD-DeCaF aims to develop cutting edge methods in order to use large scale data to design cell factories and communities for biotechnological applications. The project is built as a number of micro-services which can be used separately and via the web-based user-interface.</description>
    </item>
    
    <item>
      <title>d3flux</title>
      <link>https://opencobra.github.io/cobrapy/packages/d3flux/</link>
      <pubDate>Fri, 13 Jan 2017 11:00:03 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/d3flux/</guid>
      <description>This package implements a d3.js based visualization tool for cobrapy models.</description>
    </item>
    
    <item>
      <title>cameo</title>
      <link>https://opencobra.github.io/cobrapy/packages/cameo/</link>
      <pubDate>Fri, 13 Jan 2017 11:00:01 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/cameo/</guid>
      <description>Cameo is a high-level python library developed to aid the strain design process in metabolic engineering projects. The library provides a modular framework of simulation methods, strain design methods, access to models, that targets developers that want custom analysis workflows.
Computationally heavy methods have been parallelized and can be run on a clusters using the IPython parallelization framework (see example and documentation for more details). The default fallback is python&amp;rsquo;s multiprocessing library.</description>
    </item>
    
    <item>
      <title>cobrame</title>
      <link>https://opencobra.github.io/cobrapy/packages/cobrame/</link>
      <pubDate>Fri, 13 Jan 2017 11:00:01 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/cobrame/</guid>
      <description>COBRA Toolbox for constructing and manipulating genome-scale models of metabolism and expression (ME-models).</description>
    </item>
    
    <item>
      <title>mackinac</title>
      <link>https://opencobra.github.io/cobrapy/packages/mackinac/</link>
      <pubDate>Fri, 13 Jan 2017 11:00:01 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/mackinac/</guid>
      <description>Reconstructing and analyzing a large number of genome-scale metabolic models is a fundamental part of the integrated study of microbial communities; however, two of the most widely used frameworks for building and analyzing models use different metabolic network representations. Mackinac is a Python package that combines ModelSEED’s ability to automatically reconstruct metabolic models with COBRApy’s advanced analysis capabilities to bridge the differences between the two frameworks and facilitate the study of the metabolic potential of microorganisms.</description>
    </item>
    
    <item>
      <title>optlang</title>
      <link>https://opencobra.github.io/cobrapy/packages/optlang/</link>
      <pubDate>Fri, 13 Jan 2017 11:00:01 -0600</pubDate>
      
      <guid>https://opencobra.github.io/cobrapy/packages/optlang/</guid>
      <description>Optlang is a Python package for solving mathematical optimization problems, i.e. maximizing or minimizing an objective function over a set of variables subject to a number of constraints. Optlang provides a common interface to a series of optimization tools, so different solver backends can be changed in a transparent way. Optlang&amp;rsquo;s object-oriented API takes advantage of the symbolic math library sympy to allow objective functions and constraints to be easily formulated from symbolic expressions of variables</description>
    </item>
    
  </channel>
</rss>